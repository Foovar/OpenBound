// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenBound_Network_Object_Library.Database.Context;

namespace OpenBound_Network_Object_Library.Migrations
{
    [DbContext(typeof(OpenBoundDatabaseContext))]
    partial class OpenBoundDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OpenBound_Network_Object_Library.Models.AvatarMetadata", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("AvatarCategory")
                        .HasColumnType("int");

                    b.Property<int>("CashPrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FrameDimensionX")
                        .HasColumnType("int");

                    b.Property<int>("FrameDimensionY")
                        .HasColumnType("int");

                    b.Property<int>("GoldPrice")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PivotX")
                        .HasColumnType("real");

                    b.Property<float>("PivotY")
                        .HasColumnType("real");

                    b.HasKey("ID", "Gender", "AvatarCategory");

                    b.ToTable("AvatarMetadata");

                    b.HasData(
                        new
                        {
                            ID = 0,
                            Gender = 0,
                            AvatarCategory = 0,
                            CashPrice = 0,
                            Date = new DateTime(2020, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 38,
                            FrameDimensionY = 24,
                            GoldPrice = 0,
                            Name = "Basic",
                            PivotX = 25f,
                            PivotY = 12f
                        },
                        new
                        {
                            ID = 1,
                            Gender = 0,
                            AvatarCategory = 0,
                            CashPrice = 100,
                            Date = new DateTime(2020, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 32,
                            FrameDimensionY = 28,
                            GoldPrice = 100,
                            Name = "Space Marine",
                            PivotX = 18f,
                            PivotY = 14f
                        },
                        new
                        {
                            ID = 2,
                            Gender = 0,
                            AvatarCategory = 0,
                            CashPrice = 100,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 136,
                            FrameDimensionY = 78,
                            GoldPrice = 100,
                            Name = "Miner",
                            PivotX = 95f,
                            PivotY = 52f
                        },
                        new
                        {
                            ID = 3,
                            Gender = 0,
                            AvatarCategory = 0,
                            CashPrice = 100,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 38,
                            FrameDimensionY = 39,
                            GoldPrice = 100,
                            Name = "Punk",
                            PivotX = 23f,
                            PivotY = 22f
                        },
                        new
                        {
                            ID = 138,
                            Gender = 0,
                            AvatarCategory = 0,
                            CashPrice = 99999999,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 39,
                            FrameDimensionY = 48,
                            GoldPrice = 99999999,
                            Name = "Kappa",
                            PivotX = 18f,
                            PivotY = 27f
                        },
                        new
                        {
                            ID = 0,
                            Gender = 0,
                            AvatarCategory = 1,
                            CashPrice = 0,
                            Date = new DateTime(2020, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 44,
                            FrameDimensionY = 28,
                            GoldPrice = 0,
                            Name = "Basic",
                            PivotX = 22f,
                            PivotY = 12f
                        },
                        new
                        {
                            ID = 1,
                            Gender = 0,
                            AvatarCategory = 1,
                            CashPrice = 100,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 34,
                            FrameDimensionY = 34,
                            GoldPrice = 100,
                            Name = "Space Marine",
                            PivotX = 15f,
                            PivotY = 15f
                        },
                        new
                        {
                            ID = 2,
                            Gender = 0,
                            AvatarCategory = 1,
                            CashPrice = 100,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 36,
                            FrameDimensionY = 34,
                            GoldPrice = 100,
                            Name = "Miner",
                            PivotX = 16f,
                            PivotY = 15f
                        },
                        new
                        {
                            ID = 3,
                            Gender = 0,
                            AvatarCategory = 1,
                            CashPrice = 100,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 34,
                            FrameDimensionY = 34,
                            GoldPrice = 100,
                            Name = "Punk",
                            PivotX = 15f,
                            PivotY = 15f
                        },
                        new
                        {
                            ID = 1,
                            Gender = 0,
                            AvatarCategory = 2,
                            CashPrice = 100,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 26,
                            FrameDimensionY = 13,
                            GoldPrice = 100,
                            Name = "Pilot Goggles",
                            PivotX = 18f,
                            PivotY = 5f
                        },
                        new
                        {
                            ID = 0,
                            Gender = 1,
                            AvatarCategory = 0,
                            CashPrice = 0,
                            Date = new DateTime(2020, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 41,
                            FrameDimensionY = 33,
                            GoldPrice = 0,
                            Name = "Basic",
                            PivotX = 28f,
                            PivotY = 14f
                        },
                        new
                        {
                            ID = 0,
                            Gender = 1,
                            AvatarCategory = 1,
                            CashPrice = 0,
                            Date = new DateTime(2020, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 34,
                            FrameDimensionY = 28,
                            GoldPrice = 0,
                            Name = "Basic",
                            PivotX = 22f,
                            PivotY = 13f
                        },
                        new
                        {
                            ID = 0,
                            Gender = 2,
                            AvatarCategory = 2,
                            CashPrice = 0,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 1,
                            FrameDimensionY = 1,
                            GoldPrice = 0,
                            Name = "No Goggles",
                            PivotX = 0f,
                            PivotY = 0f
                        },
                        new
                        {
                            ID = 0,
                            Gender = 2,
                            AvatarCategory = 3,
                            CashPrice = 0,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 1,
                            FrameDimensionY = 1,
                            GoldPrice = 0,
                            Name = "No Flag",
                            PivotX = 0f,
                            PivotY = 0f
                        },
                        new
                        {
                            ID = 1,
                            Gender = 2,
                            AvatarCategory = 3,
                            CashPrice = 100,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 40,
                            FrameDimensionY = 34,
                            GoldPrice = 100,
                            Name = "Blue Flag",
                            PivotX = 11f,
                            PivotY = 26f
                        },
                        new
                        {
                            ID = 0,
                            Gender = 2,
                            AvatarCategory = 7,
                            CashPrice = 0,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 1,
                            FrameDimensionY = 1,
                            GoldPrice = 0,
                            Name = "No Extra",
                            PivotX = 0f,
                            PivotY = 0f
                        },
                        new
                        {
                            ID = 1,
                            Gender = 2,
                            AvatarCategory = 7,
                            CashPrice = 100,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 88,
                            FrameDimensionY = 72,
                            GoldPrice = 100,
                            Name = "Woods",
                            PivotX = 44f,
                            PivotY = 36f
                        },
                        new
                        {
                            ID = 0,
                            Gender = 2,
                            AvatarCategory = 6,
                            CashPrice = 0,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 1,
                            FrameDimensionY = 1,
                            GoldPrice = 0,
                            Name = "No Misc",
                            PivotX = 0f,
                            PivotY = 0f
                        },
                        new
                        {
                            ID = 1,
                            Gender = 2,
                            AvatarCategory = 6,
                            CashPrice = 100,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 90,
                            FrameDimensionY = 72,
                            GoldPrice = 100,
                            Name = "Bats",
                            PivotX = 45f,
                            PivotY = 36f
                        },
                        new
                        {
                            ID = 0,
                            Gender = 2,
                            AvatarCategory = 5,
                            CashPrice = 0,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 1,
                            FrameDimensionY = 1,
                            GoldPrice = 0,
                            Name = "No Pets",
                            PivotX = 0f,
                            PivotY = 0f
                        },
                        new
                        {
                            ID = 1,
                            Gender = 2,
                            AvatarCategory = 5,
                            CashPrice = 99999999,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 30,
                            FrameDimensionY = 28,
                            GoldPrice = 99999999,
                            Name = "Red Parrot",
                            PivotX = 14f,
                            PivotY = 24f
                        },
                        new
                        {
                            ID = 0,
                            Gender = 2,
                            AvatarCategory = 4,
                            CashPrice = 0,
                            Date = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrameDimensionX = 1,
                            FrameDimensionY = 1,
                            GoldPrice = 0,
                            Name = "No ExItem",
                            PivotX = 0f,
                            PivotY = 0f
                        });
                });

            modelBuilder.Entity("OpenBound_Network_Object_Library.Models.Guild", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.HasKey("ID");

                    b.HasIndex("Tag")
                        .IsUnique();

                    b.ToTable("Guild");
                });

            modelBuilder.Entity("OpenBound_Network_Object_Library.Models.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AllyKill")
                        .HasColumnType("bigint");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("AttackDelay")
                        .HasColumnType("int");

                    b.Property<int>("Cash")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("Dig")
                        .HasColumnType("int");

                    b.Property<long>("DirectHit")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<long>("EnemyKill")
                        .HasColumnType("bigint");

                    b.Property<int>("EquippedAvatarBody")
                        .HasColumnType("int");

                    b.Property<int>("EquippedAvatarExItem")
                        .HasColumnType("int");

                    b.Property<int>("EquippedAvatarExtra")
                        .HasColumnType("int");

                    b.Property<int>("EquippedAvatarFlag")
                        .HasColumnType("int");

                    b.Property<int>("EquippedAvatarGoggles")
                        .HasColumnType("int");

                    b.Property<int>("EquippedAvatarHat")
                        .HasColumnType("int");

                    b.Property<int>("EquippedAvatarMisc")
                        .HasColumnType("int");

                    b.Property<int>("EquippedAvatarPet")
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<long>("FriendlyFire")
                        .HasColumnType("bigint");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int?>("GuildId")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<long>("HighAngleShots")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemDelay")
                        .HasColumnType("int");

                    b.Property<long>("MatchesLeft")
                        .HasColumnType("bigint");

                    b.Property<long>("MatchesPlayed")
                        .HasColumnType("bigint");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(172)")
                        .HasMaxLength(172);

                    b.Property<int>("Popularity")
                        .HasColumnType("int");

                    b.Property<int>("PrimaryMobile")
                        .HasColumnType("int");

                    b.Property<int>("Regeneration")
                        .HasColumnType("int");

                    b.Property<int>("SecondaryMobile")
                        .HasColumnType("int");

                    b.Property<long>("ShotCounter")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("GuildId");

                    b.HasIndex("Nickname", "Email")
                        .IsUnique();

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AllyKill = 0L,
                            Attack = 0,
                            AttackDelay = 0,
                            Cash = 0,
                            Defense = 0,
                            Dig = 0,
                            DirectHit = 0L,
                            Email = "dev00@dev.com",
                            EnemyKill = 0L,
                            EquippedAvatarBody = 0,
                            EquippedAvatarExItem = 0,
                            EquippedAvatarExtra = 0,
                            EquippedAvatarFlag = 0,
                            EquippedAvatarGoggles = 0,
                            EquippedAvatarHat = 0,
                            EquippedAvatarMisc = 0,
                            EquippedAvatarPet = 0,
                            Experience = 0,
                            FriendlyFire = 0L,
                            Gender = 0,
                            Gold = 0,
                            Health = 0,
                            HighAngleShots = 0L,
                            ItemDelay = 0,
                            MatchesLeft = 0L,
                            MatchesPlayed = 0L,
                            Nickname = "Winged",
                            Password = "$2y$12$ZcVa8MvpkEUx5LlQ5BNjNOezed07s8b71I5OcYq5vf1q52tjASjki",
                            Popularity = 0,
                            PrimaryMobile = 0,
                            Regeneration = 0,
                            SecondaryMobile = 0,
                            ShotCounter = 0L
                        },
                        new
                        {
                            ID = 2,
                            AllyKill = 0L,
                            Attack = 0,
                            AttackDelay = 0,
                            Cash = 0,
                            Defense = 0,
                            Dig = 0,
                            DirectHit = 0L,
                            Email = "dev01@dev.com",
                            EnemyKill = 0L,
                            EquippedAvatarBody = 0,
                            EquippedAvatarExItem = 0,
                            EquippedAvatarExtra = 0,
                            EquippedAvatarFlag = 0,
                            EquippedAvatarGoggles = 0,
                            EquippedAvatarHat = 0,
                            EquippedAvatarMisc = 0,
                            EquippedAvatarPet = 0,
                            Experience = 0,
                            FriendlyFire = 0L,
                            Gender = 0,
                            Gold = 0,
                            Health = 0,
                            HighAngleShots = 0L,
                            ItemDelay = 0,
                            MatchesLeft = 0L,
                            MatchesPlayed = 0L,
                            Nickname = "Wicked",
                            Password = "$2y$12$ZcVa8MvpkEUx5LlQ5BNjNOezed07s8b71I5OcYq5vf1q52tjASjki",
                            Popularity = 0,
                            PrimaryMobile = 0,
                            Regeneration = 0,
                            SecondaryMobile = 0,
                            ShotCounter = 0L
                        },
                        new
                        {
                            ID = 3,
                            AllyKill = 0L,
                            Attack = 0,
                            AttackDelay = 0,
                            Cash = 0,
                            Defense = 0,
                            Dig = 0,
                            DirectHit = 0L,
                            Email = "dev02@dev.com",
                            EnemyKill = 0L,
                            EquippedAvatarBody = 0,
                            EquippedAvatarExItem = 0,
                            EquippedAvatarExtra = 0,
                            EquippedAvatarFlag = 0,
                            EquippedAvatarGoggles = 0,
                            EquippedAvatarHat = 0,
                            EquippedAvatarMisc = 0,
                            EquippedAvatarPet = 0,
                            Experience = 0,
                            FriendlyFire = 0L,
                            Gender = 0,
                            Gold = 0,
                            Health = 0,
                            HighAngleShots = 0L,
                            ItemDelay = 0,
                            MatchesLeft = 0L,
                            MatchesPlayed = 0L,
                            Nickname = "Willow",
                            Password = "$2y$12$ZcVa8MvpkEUx5LlQ5BNjNOezed07s8b71I5OcYq5vf1q52tjASjki",
                            Popularity = 0,
                            PrimaryMobile = 0,
                            Regeneration = 0,
                            SecondaryMobile = 0,
                            ShotCounter = 0L
                        },
                        new
                        {
                            ID = 4,
                            AllyKill = 0L,
                            Attack = 0,
                            AttackDelay = 0,
                            Cash = 0,
                            Defense = 0,
                            Dig = 0,
                            DirectHit = 0L,
                            Email = "dev03@dev.com",
                            EnemyKill = 0L,
                            EquippedAvatarBody = 0,
                            EquippedAvatarExItem = 0,
                            EquippedAvatarExtra = 0,
                            EquippedAvatarFlag = 0,
                            EquippedAvatarGoggles = 0,
                            EquippedAvatarHat = 0,
                            EquippedAvatarMisc = 0,
                            EquippedAvatarPet = 0,
                            Experience = 0,
                            FriendlyFire = 0L,
                            Gender = 0,
                            Gold = 0,
                            Health = 0,
                            HighAngleShots = 0L,
                            ItemDelay = 0,
                            MatchesLeft = 0L,
                            MatchesPlayed = 0L,
                            Nickname = "Vinny",
                            Password = "$2y$12$ZcVa8MvpkEUx5LlQ5BNjNOezed07s8b71I5OcYq5vf1q52tjASjki",
                            Popularity = 0,
                            PrimaryMobile = 0,
                            Regeneration = 0,
                            SecondaryMobile = 0,
                            ShotCounter = 0L
                        },
                        new
                        {
                            ID = 5,
                            AllyKill = 0L,
                            Attack = 0,
                            AttackDelay = 0,
                            Cash = 0,
                            Defense = 0,
                            Dig = 0,
                            DirectHit = 0L,
                            Email = "test0@dev.com",
                            EnemyKill = 0L,
                            EquippedAvatarBody = 0,
                            EquippedAvatarExItem = 0,
                            EquippedAvatarExtra = 0,
                            EquippedAvatarFlag = 0,
                            EquippedAvatarGoggles = 0,
                            EquippedAvatarHat = 0,
                            EquippedAvatarMisc = 0,
                            EquippedAvatarPet = 0,
                            Experience = 0,
                            FriendlyFire = 0L,
                            Gender = 0,
                            Gold = 0,
                            Health = 0,
                            HighAngleShots = 0L,
                            ItemDelay = 0,
                            MatchesLeft = 0L,
                            MatchesPlayed = 0L,
                            Nickname = "Test",
                            Password = "$2y$12$ZcVa8MvpkEUx5LlQ5BNjNOezed07s8b71I5OcYq5vf1q52tjASjki",
                            Popularity = 0,
                            PrimaryMobile = 0,
                            Regeneration = 0,
                            SecondaryMobile = 0,
                            ShotCounter = 0L
                        });
                });

            modelBuilder.Entity("OpenBound_Network_Object_Library.Models.PlayerAvatarMetadata", b =>
                {
                    b.Property<int>("Player_ID")
                        .HasColumnType("int");

                    b.Property<int>("AvatarMetadata_ID")
                        .HasColumnType("int");

                    b.Property<int>("AvatarMetadata_AvatarCategory")
                        .HasColumnType("int");

                    b.Property<int>("AvatarMetadata_Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("BoughtAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.HasKey("Player_ID", "AvatarMetadata_ID");

                    b.HasIndex("AvatarMetadata_ID", "AvatarMetadata_Gender", "AvatarMetadata_AvatarCategory");

                    b.ToTable("PlayerAvatarMetadata");
                });

            modelBuilder.Entity("OpenBound_Network_Object_Library.Models.PlayerRelationship", b =>
                {
                    b.Property<int?>("Player_A_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Player_B_ID")
                        .HasColumnType("int");

                    b.Property<int>("PlayerRelationshipStatus")
                        .HasColumnType("int");

                    b.HasKey("Player_A_ID", "Player_B_ID");

                    b.HasIndex("Player_B_ID");

                    b.ToTable("PlayerRelationship");
                });

            modelBuilder.Entity("OpenBound_Network_Object_Library.Models.Player", b =>
                {
                    b.HasOne("OpenBound_Network_Object_Library.Models.Guild", "Guild")
                        .WithMany("GuildMembers")
                        .HasForeignKey("GuildId");
                });

            modelBuilder.Entity("OpenBound_Network_Object_Library.Models.PlayerAvatarMetadata", b =>
                {
                    b.HasOne("OpenBound_Network_Object_Library.Models.Player", "Player")
                        .WithMany("AvatarMetadataList")
                        .HasForeignKey("Player_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenBound_Network_Object_Library.Models.AvatarMetadata", "AvatarMetadata")
                        .WithMany("PlayerAvatarMetadata")
                        .HasForeignKey("AvatarMetadata_ID", "AvatarMetadata_Gender", "AvatarMetadata_AvatarCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OpenBound_Network_Object_Library.Models.PlayerRelationship", b =>
                {
                    b.HasOne("OpenBound_Network_Object_Library.Models.Player", "Player_A")
                        .WithMany("BefriendedWith")
                        .HasForeignKey("Player_A_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OpenBound_Network_Object_Library.Models.Player", "Player_B")
                        .WithMany("BefriendedFrom")
                        .HasForeignKey("Player_B_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
